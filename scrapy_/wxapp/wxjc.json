{"title": "微信小程序开发早知道 ", "author": "Rolan", "pub_time": "2019-4-4 00:24", "content": "<td id=\"article_content\"> \n                     \n                    <ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>没有跳转公众号、跳转公众号图文素材的能力。除非用户通过扫描二维码进入小程序的情景，可以显示关注公众号组件。公众号菜单、公众号图文素材可以打开小程序，网页无法直接打开小程序。</li><li style=\"line-height: 1.7em;\">小程序内嵌网页、内嵌网页中跳转链接、iframe 嵌套的页面，都必须在安全域名内，否则无法访问。如果想在小程序内加入第三方广告，要注意这点，因为安全域名修改是有次数限制的，并要求验证服务器。还要注意网页中嵌套 iframe 的情况，例如，网页内嵌了腾讯视频 iframe，由于腾讯视频不在安全域名内，会造成页面无法访问。</li><li style=\"line-height: 1.7em;\">用户信息授权、手机号码授权需要用户通过点击操作。</li><li style=\"line-height: 1.7em;\">小程序间跳转需要用户点击操作，跳转前需要用户确认，可跳转小程序数量不超过10个。</li><li style=\"line-height: 1.7em;\">小程序分为开发版、体验版、审核版、线上版：开发版是开发工具编辑过的最新版本；开发工具上传后成为体验版，具备体验权限的用户都可以查看；将开发版提交给官方审核后，成为审核版；审核成功后，才可以发布成为线上版本。</li><li style=\"line-height: 1.7em;\">官方「小程序助手」小程序可以很方便打开各版本小程序。</li><li style=\"line-height: 1.7em;\">每次发布新版本，用户都需要重新下载新版本。</li><li style=\"line-height: 1.7em;\">小程序仍在不断更新和完善，旧代码可能会因不符合新政策，在下次发布的时候无法正常运行。为避免这种情况的发生，应多关注官方公告。</li><li style=\"line-height: 1.7em;\">版本回退功能可以将线上版本回退成上一个版本</li><li style=\"line-height: 1.7em;\">小程序使用 CommonJS 规范，对 ES6 有很好的支持</li><li style=\"line-height: 1.7em;\">小程序没有官方状态管理工具，页面间通讯靠 query string 传递参数。如果有复杂状态管理的需求的话，建议引入一些设计模式或使用第三方框架。</li><li style=\"line-height: 1.7em;\">用户微信支付后，需要后台推送消息到服务器，才能确认支付成功。</li><li style=\"line-height: 1.7em;\">小程序的 DOM 操作只能查询属性，无法设置属性。</li><li style=\"line-height: 1.7em;\">小程序基础库版本与微信版本有关， <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/client-lib/client.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">基础库版本与客户端版本对应关系</a> 。</li><li style=\"line-height: 1.7em;\">小程序也存在兼容性问题，对待不愿更新微信的用户，要像对待忠实的IE6用户一样， <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/client-lib/version.html\" rel=\"nofollow,noindex\" target=\"_blank\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">小程序基础库版本分布</a> 。</li><li style=\"line-height: 1.7em;\">小程序页面只有 onLoad、onShow、onReady、onHide、onUnload 生命周期，没有更新视图相关的生命周期</li><li style=\"line-height: 1.7em;\">小程序不能直接渲染 HTML string，要用 rich-text 组件，但组件使用 HTML string 性能会有所下降。</li><li style=\"line-height: 1.7em;\">小程序有很多原生组件，如 Vedio、Map。原生组件位于最上层，会遮挡所有非原生组件，还存在诸多限制，如无法改变大小、无法添加动画效果等等。不过，有些组件在最新版本已经可以同层渲染了。</li><li style=\"line-height: 1.7em;\">小程序不支持摇一摇功能，但可以通过监听加速度传感器来实现。</li><li style=\"line-height: 1.7em;\">小程序有官方的广告组件，广告收入官方会抽走一部分。</li><li style=\"line-height: 1.7em;\">想到再更，欢迎补充.</li></ol> </td>"}
{"title": "使用 wx.getLocation() 获取用户位置并转化成真实描述文字 ", "author": "Rolan", "pub_time": "2019-4-12 00:10", "content": "<td id=\"article_content\"> \n                     \n                    <h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>解决问题：</h4><ol style='padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">在<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>中获取用户的信息， 使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation</code> API, 在使用这个 API 之前需要首先设置用户授权.</p></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\">用户有可能在进入小程序的时候关闭了获取位置的权限， 当需要获取位置的时候要重新判断是否拥有权限。 如果没有权限需要再次提醒用户授权.</p></li><li style=\"line-height: 1.7em;\"><p class=\"no-text-indent\" style=\"margin: 0px 0px 0.75em; line-height: 1.7em;\"><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation</code> 接口返回的用户位置是经纬度形式的， 需要借助于 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>微信小程序JavaScript SDK</code> 对返回的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>latitude</code> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>longitude</code> 经纬度信息解析为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>国家 省份 市 ...</code> 的形式。</p></li></ol><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>设置用户授权</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>小程序中部分接口是需要用户授权同意后才能调用的。 像 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getUserInfo</code> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getLocation</code> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>chooseAddress</code> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>chooseInvoiceTitle</code> <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getWeRunData</code> 等。 当我们在小程序中需要使用这些接口的时候，首先都要用户用户授权才能使用， 我们可以使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.openSetting</code> 打开设置界面，引导用户开启授权。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getLocation</code> 除了需要用户授权外， 还需要在开发的时候在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 配置地理位置用途说明;</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>第一步</code> 我们需要在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>app.json</code> 文件中首先配置 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>地理位置用途说明</code></p><h4 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.7em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 16px; text-indent: 1em; background-color: rgb(254, 254, 254);'>app.json</h4><pre class=\"prettyprint hljs xquery\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>{\r\n    <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"permission\"</span>: {\r\n        <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"scope.userLocation\"</span>: {\r\n            <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"desc\"</span>: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"你的位置信息将用于小程序位置接口的效果展示\"</span>\r\n        }\r\n    }\r\n}\r\n复制代码</pre><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>获取经纬度信息</h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>第二步</code> 在需要使用到 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getLocation</code> 接口的页面中的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>xx.js</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>onLoad</code> 方法中判断用户时候已经授权了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getLocation</code> 的权限。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getSetting</code> 获取所有已授权接口。 该接口会返回一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>authSetting</code> 对象， 里面包含了所有的授权结果。</p><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">success</span>(res) {\r\n   <span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">console</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.log</span>(res.authSetting)\r\n   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// res.authSetting = {</span>\r\n   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//   \"scope.userInfo\": true,</span>\r\n   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">//   \"scope.userLocation\": true</span>\r\n   <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// }</span>\r\n }\r\n})\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>所以我们可以在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>onLoad</code> 方法中使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getSetting</code> 方法判断用户是否授权了 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>userLocation</code></p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>onLoad: <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">function</span><span class=\"hljs-params\">()</span> {</span>\r\n    // 将当前页面的 this 赋值给 <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vm</span>, 以区别于下面回调函数中的 this \r\n    const <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vm</span> = this\r\n\r\n    wx.getSetting({\r\n      success(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>) {\r\n        // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1</span>. scope.userLocation 为真， 代表用户已经授权\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'scope.userLocation'</span>]) {\r\n         // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1.1</span> 使用 getlocation 获取用户 经纬度位置\r\n         wx.getLocation({\r\n             success(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>){\r\n                 // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1.2</span> 获取用户位置成功后，将会返回 latitude, longitude 两个字段，代表用户的经纬度位置\r\n                 console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)\r\n\r\n                 // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">1.3</span> 将获取到的 经纬度传值给 getAddress 解析出 具体的地址\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vm</span>.getAddress(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.latitude, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.longitude)\r\n             }\r\n         })\r\n        }<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">else</span> {\r\n            // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2</span>. 用户未授权的情况下， 打开授权界面， 引导用户授权.\r\n            wx.openSetting({\r\n                success(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>) {\r\n                    // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2.1</span> 如果二次授权允许了 userLocation 权限， 就再次执行获取位置的接口\r\n                    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span> (<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.authSetting[<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"scope.userLocation\"</span>]) {\r\n                         wx.getLocation({\r\n                            success(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>){\r\n                                // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2.2</span> 获取用户位置成功后，将会返回 latitude, longitude 两个字段，代表用户的经纬度位置\r\n                                console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)\r\n\r\n                                // <span class=\"hljs-number\" style=\"color: rgb(136, 0, 0);\">2.3</span> 将获取到的 经纬度传值给 getAddress 解析出 具体的地址\r\n                                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vm</span>.getAddress(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.latitude, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.longitude)\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n      }\r\n    })\r\n}\r\n\r\n复制代码</pre><div style='font-size: 16px; line-height: 1.7em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">上面的代码的逻辑是: 当页面加载完成后， 1. 先获取用户授权列表。 并判断是否有 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>scope.userLocation</code> 的权限.</p><ol style=\"padding: 0px; margin: 0px 0px 0.75em 25px; line-height: 1.7em;\"><li style=\"line-height: 1.7em;\">如果有权限， 直接调用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation</code> 获取用户的位置。 将获取的经纬度位置传递给 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAddress</code> 。 在 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAddress</code> 方法中将会把 经纬度位置转换成实际的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>国家 省份 市</code> 格式的地址；</li><li style=\"line-height: 1.7em;\">如果没有权限，就使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.openSetting</code> 接口代开权限设置界面， 让用户进行二次授权。授权成功后执行 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.getLocation</code> --&gt; <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAddress</code> 的方法。</li></ol></div><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>注意 注意 注意： <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.openSetting</code> 接口在 2018年10月1号起用法已经改变， 像代码中直接使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>wx.openSetting</code> 来打开授权页面已经不能使用了， 新版本的使用方法参考 <a target=\"_blank\" href=\"https://link.juejin.im/?target=https%3A%2F%2Fdevelopers.weixin.qq.com%2Fcommunity%2Fdevelop%2Fdoc%2F000cea2305cc5047af5733de751008\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">打开小程序设置页（wx.openSetting）接口调整</a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>转化经纬度信息为 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-size: 14px;'>国家 省份 市</code></h2><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在第二步， 已经拿到了经纬度的信息之后， 使用了一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAddress</code> 的方法，来转化经纬度。在这个方法中需要使用 <a target=\"_blank\" href=\"https://link.juejin.im/?target=https%3A%2F%2Flbs.qq.com%2Fqqmap_wx_jssdk%2Findex.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序JavaScript SDK</a> 来作为工具。</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>在使用 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>微信小程序JavaScript SDK</code> 的时候需要先在 <a target=\"_blank\" href=\"https://link.juejin.im/?target=https%3A%2F%2Flbs.qq.com%2Fqqmap_wx_jssdk%2Findex.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">微信小程序JavaScript SDK</a> 中注册账号， 并申请一个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> , 要想在小程序中使用这个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 还需要 把这个 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>key</code> 的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>WebServiceAPI</code> 勾选上</p><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>使用 '微信小程序 JavaScriptSDK' 需要 <a target=\"_blank\" href=\"https://link.juejin.im/?target=http%3A%2F%2F3gimg.qq.com%2Flightmap%2Fxcx%2Fjssdk%2Fqqmap-wx-jssdk1.2.zip\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">下载微信小程序 JavaScriptSDK v1.2 文件</a> 。 然后将<code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>微信小程序 JavaScriptSDK</code> 文件引入到当前页面的 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>xx.js</code> 中。</p><pre class=\"prettyprint hljs php\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// xx.js</span>\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">const</span> QQMapWX = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'../../utils/qqmap-wx-jssdk.js'</span>)\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>最后实现 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>getAddress</code> 方法:</p><pre class=\"prettyprint hljs vim\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'>getAddress(latitude, longitude) {\r\n        // 生成 QQMapWX 实例\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">let</span> qqmapsdk = <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">new</span> QQMapWX({\r\n            key: <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'xxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx-xxxxx'</span>\r\n        })\r\n\r\n        // reverseGeocoder 为 QQMapWX 解析 经纬度的方法\r\n        qqmapsdk.reverseGeocoder({\r\n            location: {latitude,longitude},\r\n            success(<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>) {\r\n                console.<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>(<span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">'success'</span>, <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>)\r\n                <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">vm</span>.setData({\r\n                    // ad_info: <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.result.ad_info\r\n                    // city： <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">res</span>.result.ad_info\r\n                })\r\n            }\r\n        })\r\n    }\r\n复制代码</pre><p style='margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; color: rgb(51, 51, 51); font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; background-color: rgb(254, 254, 254);'>关于 reverseGeocoder 返回的详细信息可以查看 <a target=\"_blank\" href=\"https://link.juejin.im/?target=https%3A%2F%2Flbs.qq.com%2Fqqmap_wx_jssdk%2Fmethod-reverseGeocoder.html\" rel=\"nofollow,noindex\" style=\"color: rgb(148, 148, 148); text-decoration-line: none; transition: 0.25s; outline: none 0px; border-bottom: 1px dashed rgb(148, 148, 148); font-style: italic; font-weight: bold;\">reverseGeocoder 返回信息</a></p> </td>"}
{"title": "微信小程序：如何防止数据重复插入？ ", "author": "Rolan", "pub_time": "2019-4-12 00:23", "content": "<td id=\"article_content\"> \n                     \n                    <h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'><div style=\"font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">号外：为读者持续整理了几份最新教程，覆盖了 Spring Boot、Spring Cloud、微服务架构等PDF。</p><p style=\"margin: 0px 0px 0.75em; line-height: 1.7em; text-indent: 1em;\">获取方式：关注右侧公众号\"泥瓦匠BYSocket\"，来领取吧！</p></div></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\"><b>摘要: 原创出处 https://www.bysocket.com 「公众号：泥瓦匠BYSocket 」欢迎关注和转载，保留摘要，谢谢！</b></p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">目录</p><ol style=\"padding: 0px; margin: 0px 0px 0.75em 25px; font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><li style=\"line-height: 1.7em;\">为啥要解决数据重复插入？</li><li style=\"line-height: 1.7em;\">解决方案实战</li><li style=\"line-height: 1.7em;\">可落地小总结</li></ol><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>一、为啥要解决数据重复插入？</h2><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">问题起源，微信<a href=\"http://www.wxapp-union.com/\" target=\"_blank\" class=\"relatedlink\">小程序</a>抽风 wx.request() 重复请求服务器提交数据。后端服务也很简单，伪代码如下：</p><pre class=\"prettyprint hljs cpp\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> SignLogService {\r\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">void</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">saveSignLog</span><span class=\"hljs-params\">(SignLogDO <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>)</span> </span>{\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 简单插入做记录</span>\r\n        SignLogDAO.insert(<span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">log</span>);\r\n    }\r\n}</pre><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">发现数据库会存在重复数据行，提交时间一模一样。但业务需求是不能有多余的 log 出现，这明显是个问题。</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">问题是，重复请求导致的数据重复插入。这问题造成的后果很明显：</p><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><li style=\"line-height: 1.7em; list-style-type: disc;\">数据冗余，可能不单单多一条</li><li style=\"line-height: 1.7em; list-style-type: disc;\">有些业务需求不能有多余数据，造成服务问题</li></ul><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">问题如图所示：</p><p><a href=\"data/attachment/portal/201904/12/102539fr2g8hhl6g8h88h6.png\" target=\"_blank\"><img src=\"data/attachment/portal/201904/12/102539fr2g8hhl6g8h88h6.png\"></a></p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">解决方式：如何将 同请求 A，不执行插入，而是读取前一个请求插入的数据并返回。解决后流程应该如下：</p><p><a href=\"data/attachment/portal/201904/12/102539aoajd757d6og9gvo.png\" target=\"_blank\"><img src=\"data/attachment/portal/201904/12/102539aoajd757d6og9gvo.png\"></a></p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>二、解决方案实战</h2><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>1.单库单表解决方案</h2><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><li style=\"line-height: 1.7em; list-style-type: disc;\">唯一索引 + 唯一字段</li><li style=\"line-height: 1.7em; list-style-type: disc;\">幂等</li></ul></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">上面说的那种业务场景：sign_log 表会有 user_id、sign_id、sign_time 等。那么每次签到，每个人每天只有一条签到记录。</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">数据库层采取唯一索引的形式，保证数据记录唯一性。即 UNIQUE 约束，UNIQUE 约束唯一标识数据库表中的每条记录。另外，user_id,sign_id,sign_time 三个组合适唯一字段。创表的伪代码如下：</p><pre class=\"prettyprint hljs sql\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CREATE</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">TABLE</span> sign_log\r\n(\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">id</span> <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">int</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span>,\r\nuser_id <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">int</span> <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">NOT</span> <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">NULL</span>,\r\nsign_id <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">int</span>,\r\nsign_time <span class=\"hljs-built_in\" style=\"color: rgb(57, 115, 0);\">int</span>,\r\n<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">CONSTRAINT</span> unique_sign_log <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">UNIQUE</span> (user_id,sign_id,sign_time)\r\n)</pre><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">重点是 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>CONSTRAINT unique_sign_log UNIQUE (user_id,sign_id,sign_time)</code> 。有个小问题，数据量大的时候，每条记录都会有对应的唯一索引，比较耗资源。那么这样就行了吗？</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">答案是不行，服务不够健壮。第一个请求插入成功，第二个请求直接报错，Java 服务会抛出 <code style='padding: 2px 4px; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; border-radius: 3px; background-color: rgb(247, 247, 249); border: 0px; font-weight: 600; font-size: 14px;'>DuplicateKeyException</code> 。</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">简单的幂等写法操作即可，伪代码如下：</p><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">SignLogService</span> </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> SingLogDO saveSignLog(SignLogDO log) {\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 幂等处理</span>\r\n        SignLogDO insertLog = <span class=\"hljs-literal\" style=\"color: rgb(120, 169, 96);\">null</span>;\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">try</span> {\r\n            insertLog = signLogDAO.insert(log);\r\n        } <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">catch</span> (DuplicateKeyException e) {\r\n            insertLog = selectByUniqueKeys(userId,signId,signTime);\r\n        }\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> insertLog;\r\n    }\r\n}</pre><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">的确，流量不是很大，也不算很高并发。重复写问题，这样处理即可。那大流量、高并发场景咋搞</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>2.分库分表解决方案</h2><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">流量大了后，单库单表会演变成分库分表。那么基于单表的唯一索引形式，在碰到分表就无法保证呢，插入的地方可能是两个分表 A1 和 A2。</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">解决思路：将数据的唯一性条件放到其他存储，并进行锁控制</p><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">还是上面的例子，每天，每次签到，每个人只有一条签到记录。那么使用分布式锁 Redis 的解决方案。大致伪代码如下：</p><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>a.加锁</h3><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'><pre class=\"prettyprint hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 加锁</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">jedis</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.set</span>(lockKey, requestId, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"NX\"</span>, <span class=\"hljs-string\" style=\"color: rgb(136, 0, 0);\">\"PX\"</span>, expireTime);</pre><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><li style=\"line-height: 1.7em; list-style-type: disc;\">lockKey 最简单的是 user_id + sign_id + sign_time</li><li style=\"line-height: 1.7em; list-style-type: disc;\">expireTime 设置为一天</li></ul></h1><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>b.解锁</h3><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'><pre class=\"hljs less\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 0.75em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 解锁</span>\r\n<span class=\"hljs-selector-tag\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">jedis</span><span class=\"hljs-selector-class\" style=\"color: rgb(136, 0, 0);\">.eval</span>(script, lockKey,requestId);</pre></h1><h3 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>c.幂等代码加强</h3><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'><pre class=\"prettyprint hljs kotlin\" style='padding: 0.5em; font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace; color: rgb(68, 68, 68); border-radius: 4px; margin-top: 0px; margin-bottom: 1.5em; font-size: 14px; line-height: 1.5em; word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; overflow-x: auto;'><span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">class</span> <span class=\"hljs-title\" style=\"color: rgb(136, 0, 0); font-weight: bold;\">SignLogService</span> </span>{\r\n    <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">public</span> SingLogDO saveSignLog(SignLogDO log) {\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 幂等校验</span>\r\n        SignLogDO existLog = selectByUniqueKeys(userId,signId,signTime);\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">if</span>(Objects.nonNull(existLog)) {\r\n            <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> existLog;\r\n        }\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 加锁</span>\r\n        jedis.<span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">set</span>\r\n\r\n        SignLogDO insertLog = signLogDAO.insert(log);\r\n\r\n        <span class=\"hljs-comment\" style=\"color: rgb(136, 136, 136);\">// 解锁</span>\r\n        jedis.eval\r\n\r\n        <span class=\"hljs-keyword\" style=\"color: rgb(51, 51, 51); font-weight: 700;\">return</span> insertLog;\r\n    }\r\n}</pre></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">这个方案还是不是很成熟，大家参考下即可。</p><h2 style='margin: 0px 0px 0.5em; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; line-height: 1.6em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 18px; text-indent: 1em; background-color: rgb(254, 254, 254);'>三、可落地小总结</h2><h1 style='margin: 0px 0px 5px; font-family: \"Helvetica Neue\", Helvetica, Tahoma, Arial, STXihei, \"Microsoft YaHei\", 微软雅黑, sans-serif; font-weight: normal; line-height: 1.5em; color: rgb(51, 51, 51); text-rendering: optimizeLegibility; font-size: 24px;'></h1><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254);\">解决方案实战中，了解具体术。归纳如下：</p><ul style=\"padding: 0px; margin: 0px 0px 0.75em 25px; list-style-type: none; font-size: 16px; line-height: 1.7em; background-color: rgb(254, 254, 254);\"><li style=\"line-height: 1.7em; list-style-type: disc;\">幂等：保证多次同意请求后结果一致</li><li style=\"line-height: 1.7em; list-style-type: disc;\">并发控制：单表唯一索引、分布式多表分布式锁</li><li style=\"line-height: 1.7em; list-style-type: disc;\">降级兜底方案：分布式锁锁失效 – 考虑乐观锁兜底</li><li></ul><p style=\"margin: 0px 0px 0.75em; font-size: 16px; line-height: 1.7em; text-indent: 1em; background-color: rgb(254, 254, 254); text-align: center;\"></p> </td>"}
